#include <iostream>
#include <queue>
#include <utility> // for std::swap

class StackUsingQueues {
private:
    std::queue<int> q1, q2;

public:

    void push(int x) {
        q2.push(x);
        while (!q1.empty()) {
            q2.push(q1.front());
            q1.pop();
        }
        std::swap(q1, q2);
    }

    void pop() {
        if (!q1.empty()) {
            q1.pop();
        }
    }

    int top() {
        if (!q1.empty()) {
            return q1.front();
        }
        throw std::runtime_error("Stack is empty");
    }

    bool empty() {
        return q1.empty();
    }
};

int main(){
    StackUsingQueues s;
    s.push(1);
    s.push(2);
    s.push(3);
    std::cout << s.top() << std::endl; // Outputs 3

    std::cout << s.empty() << std::endl; // Outputs 0 (false)

    std::cout << s.top() << std::endl; // Outputs 3

    return 0;
}