#include <stack>
#include <iostream>

class Queue{
private:    
    std::stack<int> s1, s2;
    
    void transfer(){
        s2.push(s1.top());
        s1.pop();
    }

public:
    void enqueue(int x){
        s1.push(x);
    }

    int dequeue(){
        if(s2.empty()){
            while(!s1.empty()){
                transfer();
            }
        }
        if(!s2.empty()){
            int val = s2.top();
            s2.pop();
            return val;
        }
        throw std::runtime_error("Queue is empty");
    }

    bool isEmpty(){
        return s1.empty() && s2.empty();
    }

    int front(){
        if(s2.empty()){
            while(!s1.empty()){
                transfer();
            }
        }
        if(!s2.empty()){
            return s2.top();
        }
        throw std::runtime_error("Queue is empty");
    }





}